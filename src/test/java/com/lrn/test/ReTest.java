package com.lrn.test;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ReTest {
    public static void main( String args[] ){

        // 按指定模式在字符串查找
        String line = "2020-04-29 15:09:31.384|trademanager|http-bio-7001-exec-1:t.hsf||| ERROR RPC invoke "
            + "Service[com.taobao.trade.platform.api.query.SellerQueryService:1.0.0]#[queryMainAndDetail]occur "
            + "exception:\n"
            + "target server address:[hsf://11.138.208.237:12200?_p=hessian2&APP=tradeplatform3&st=na620&v=2"
            + ".0&_TIMEOUT=5000&_ih2=y&mg=tp3g3host&_CONNECTTIMEOUT=1000&_SERIALIZETYPE=hessian&ut=CENTER]\n"
            + "TraceId=0b5106b315881441713477584e4e17, RpcId=0.1.1.14\n"
            + "com.taobao.tc.exception.TCException: java.lang.IllegalArgumentException: "
            + "必须给query设置足够的参数，参考：QueryBizOrderDO.hasEnoughConditon,query=com.taobao.tc.domain.query"
            + ".QueryBizOrderDO@53a598da[showMemo=false,param={auctionId={0},sellerNumId={3585892154},bizType={200,"
            + "300,9999,100,500,700,710,1000,1001,1300,150,1200,1201,1500,1550,1560,1570,1600,1650,2000,1900,2200,"
            + "2300,1110,1700,760,2300,10000,2400,2410,1102,6800,6810,2600,3000,2700,1670,3200,2900,2360,3400,3450,"
            + "3460,3470,3475,2950,2970,3800,3900,6868,1580,4000,62001,8012,3300},excludedOptions={4503599627370496,"
            + "144115188075855872,34359738368,281474976710656,32},buyerNumId={2911419283},status={0},},"
            + "enableCount=true,isDetail=true,isShowMainOrderAllDetail=false,pageNo=1,startRow=0,endRow=0,"
            + "pageSize=15,queryOrder=desc,limitTotalNum=<null>,options=-1,optionsQueryCondition=<null>,"
            + "useOptionsQueryCondition=false,ignoreWDShop=false,isUseTair=false,isNeedLimitQuery=false,"
            + "prePageSize=0,userNumId=3585892154,offsetRow=0,lastStartRow=<null>,ignoreCodWithNullPaytime=false,"
            + "from=,forceRouter=false,routVsearch=true,historyOrder=false,orderFields={},"
            + "isFiltedEmptyForFreeOrders=false,needStepTradeUnpaidQuery=<null>,needStepTradePaidQuery=<null>,"
            + "history=false,ignoreCodWithNullPaytimeFromSwitch=false,endTimeInterval=<null>]\n"
            + "\tat com.alibaba.trade.fulfillment.manager.OrderManagerImpl.queryMainAndDetailForTcDbRoute"
            + "(OrderManagerImpl.java:5277)\n"
            + "\tat com.alibaba.trade.fulfillment.manager.OrderManagerImpl.queryMainAndDetail(OrderManagerImpl"
            + ".java:5065)\n"
            + "\tat com.alibaba.trade.fulfillment.manager.OrderManagerImpl$$FastClassBySpringCGLIB$$25d9b339.invoke"
            + "(<generated>)\n"
            + "\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint"
            + "(CglibAopProxy.java:700)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke"
            + "(ExposeInvocationInterceptor.java:91)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy"
            + ".java:633)\n"
            + "\tat com.alibaba.trade.fulfillment.manager.OrderManagerImpl$$EnhancerBySpringCGLIB$$95394ce7"
            + ".queryMainAndDetail(<generated>)\n"
            + "\tat com.taobao.trade.platform.tc.service.read.TcBaseUnitServiceImpl.queryMainAndDetail"
            + "(TcBaseUnitServiceImpl.java:246)\n"
            + "\tat com.taobao.trade.platform.tc.service.read.TcBaseUnitServiceImpl$$FastClassBySpringCGLIB$$918f12f3"
            + ".invoke(<generated>)\n"
            + "\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint"
            + "(CglibAopProxy.java:700)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke"
            + "(AfterReturningAdviceInterceptor.java:51)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice"
            + ".java:55)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke"
            + "(ExposeInvocationInterceptor.java:91)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy"
            + ".java:633)\n"
            + "\tat com.taobao.trade.platform.tc.service.read.TcBaseUnitServiceImpl$$EnhancerBySpringCGLIB$$cb15671f"
            + ".queryMainAndDetail(<generated>)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10761.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint"
            + "(ReflectiveMethodInvocation.java:183)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat com.alibaba.trade.fulfillment.utils.trace.interceptor.BuyerDbRouteInterceptor.invoke"
            + "(BuyerDbRouteInterceptor.java:21)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)\n"
            + "\tat com.sun.proxy.$Proxy422.queryMainAndDetail(Unknown Source)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10761.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat com.taobao.csp.sentinel.entrypoint.entrance.HsfProviderInvocationHandler.invoke"
            + "(HsfProviderInvocationHandler.java:56)\n"
            + "\tat com.sun.proxy.$Proxy423.queryMainAndDetail(Unknown Source)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10761.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat com.taobao.hsf.remoting.provider.ReflectInvocationHandler.handleRequest0(ReflectInvocationHandler"
            + ".java:83)\n"
            + "\tat com.taobao.hsf.remoting.provider.ReflectInvocationHandler.invoke(ReflectInvocationHandler"
            + ".java:163)\n"
            + "\tat com.taobao.hsf2dubbo.DubboServerFilterAsyncInvocationHandlerInterceptor.invoke"
            + "(DubboServerFilterAsyncInvocationHandlerInterceptor.java:54)\n"
            + "\tat com.taobao.hsf.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:38)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$TailNode.invoke(RPCFilterBuilder.java:165)\n"
            + "\tat com.taobao.hsf.debug.DebugServerFilter.invoke(DebugServerFilter.java:25)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.BidirectionServerResponseFilter.invoke"
            + "(BidirectionServerResponseFilter.java:15)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.alibaba.trade.fulfillment.routing.LightFlowRouteFilter.invoke(LightFlowRouteFilter.java:42)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.unit.service.impl.UnitServerFilter.invoke(UnitServerFilter.java:66)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.region.service.impl.RegionServerFilter.invoke(RegionServerFilter.java:42)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.octopus.OctopusServerFilter.invoke(OctopusServerFilter.java:72)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.spas.SpasServerFilter.invoke(SpasServerFilter.java:76)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.txc.TXCServerFilter.invoke(TXCServerFilter.java:35)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.tps.component.TPSServerFilter.invoke(TPSServerFilter.java:68)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.stats.InvocationStatsServerFilter.invoke(InvocationStatsServerFilter"
            + ".java:47)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.monitor.log.filter.MonitorLogServerFilter.invoke(MonitorLogServerFilter.java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.profiler.ProfilerServerFilter.invoke(ProfilerServerFilter.java:32)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.eagleeye.EagleEyeServerFilter.invoke(EagleEyeServerFilter.java:68)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.filter.QosServerFilter.invoke(QosServerFilter.java:60)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.MethodAbsenceFilter.invoke(MethodAbsenceFilter.java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.EchoFilter.invoke(EchoFilter.java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.generic.GenericInvocationServerFilter.invoke(GenericInvocationServerFilter"
            + ".java:107)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.DubboGenericServerFilter.invoke(DubboGenericServerFilter.java:37)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.top.TopServerFilter.invoke(TopServerFilter.java:87)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.ServiceAbsenceFilter.invoke(ServiceAbsenceFilter.java:47)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.CommonServerFilter.invoke(CommonServerFilter.java:24)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.BidirectionServerRequestFilter.invoke(BidirectionServerRequestFilter"
            + ".java:19)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.context.DubboRPCContextServerFilter.invoke(DubboRPCContextServerFilter"
            + ".java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.context.RPCContextServerFilter.invoke(RPCContextServerFilter.java:39)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$HeadNode.invoke(RPCFilterBuilder.java:134)\n"
            + "\tat com.taobao.hsf.invocation.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:28)\n"
            + "\tat com.taobao.hsf.remoting.provider.ServerContextInvocationHandler.invoke"
            + "(ServerContextInvocationHandler.java:35)\n"
            + "\tat com.taobao.hsf.remoting.service.LocalInvocationHandler.localInvoke(LocalInvocationHandler"
            + ".java:177)\n"
            + "\tat com.taobao.hsf.remoting.service.LocalInvocationHandler.invoke(LocalInvocationHandler.java:97)\n"
            + "\tat com.taobao.hsf.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:38)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$TailNode.invoke(RPCFilterBuilder.java:165)\n"
            + "\tat com.taobao.hsf.debug.DebugClientFilter.invoke(DebugClientFilter.java:27)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.context.DubboRPCContextClientFilter.invoke(DubboRPCContextClientFilter"
            + ".java:43)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.context.RPCContextClientFilter.invoke(RPCContextClientFilter.java:31)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.unit.service.impl.UnitClientFilter.invoke(UnitClientFilter.java:64)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.generic.GenericInvocationClientFilter.invoke(GenericInvocationClientFilter"
            + ".java:59)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.filter.QosClientFilter.invoke(QosClientFilter.java:64)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.remoting.service.InvocationValidationFilter.invoke(InvocationValidationFilter"
            + ".java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.mock.MockClientFilter.invoke(MockClientFilter.java:50)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.octopus.OctopusClientFilter.invoke(OctopusClientFilter.java:51)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.spas.SpasClientFilter.invoke(SpasClientFilter.java:49)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.eagleeye.EagleEyeClientFilter.invoke(EagleEyeClientFilter.java:79)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.stats.InvocationStatsClientFilter.invoke(InvocationStatsClientFilter"
            + ".java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.dpath.DPathTagClientFilter.invoke(DPathTagClientFilter.java:38)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.monitor.log.filter.MonitorLogClientFilter.invoke(MonitorLogClientFilter.java:51)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.CommonClientFilter.invoke(CommonClientFilter.java:37)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$HeadNode.invoke(RPCFilterBuilder.java:134)\n"
            + "\tat com.taobao.hsf.invocation.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:28)\n"
            + "\tat com.taobao.hsf.cluster.TestAddressInvocationHandler.invoke(TestAddressInvocationHandler.java:50)\n"
            + "\tat com.taobao.hsf.remoting.service.AsyncInvocationHandler.invoke(AsyncInvocationHandler.java:44)\n"
            + "\tat com.taobao.hsf.invocation.FutureInvocationHandler.invoke(FutureInvocationHandler.java:44)\n"
            + "\tat com.taobao.hsf2dubbo.DubboAsyncInvocationHandler.invoke(DubboAsyncInvocationHandler.java:93)\n"
            + "\tat com.taobao.hsf.invocation.AsyncToSyncInvocationHandler.invokeType(AsyncToSyncInvocationHandler"
            + ".java:226)\n"
            + "\tat com.taobao.hsf.invocation.AsyncToSyncInvocationHandler.invoke(AsyncToSyncInvocationHandler"
            + ".java:52)\n"
            + "\tat com.taobao.hsf.profiler.ProfilerSyncInvocationHandler.invoke(ProfilerSyncInvocationHandler"
            + ".java:35)\n"
            + "\tat com.taobao.hsf.rpc.client.ErrorLogSyncInvocationHandler.invoke(ErrorLogSyncInvocationHandler"
            + ".java:47)\n"
            + "\tat com.taobao.hsf2dubbo.DubboClientFilterSyncInvocationHandlerInterceptor.invoke"
            + "(DubboClientFilterSyncInvocationHandlerInterceptor.java:56)\n"
            + "\tat com.taobao.hsf.rpc.client.ClientConcurrencyLimiter.invoke(ClientConcurrencyLimiter.java:41)\n"
            + "\tat com.taobao.hsf.InvocationUtil.invoke(InvocationUtil.java:51)\n"
            + "\tat com.taobao.hsf.proxy.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:31)\n"
            + "\tat com.taobao.hsf.proxy.JdkProxyFactory$JdkProxyInvocationHandler.invoke(JdkProxyFactory.java:99)\n"
            + "\tat com.taobao.csp.sentinel.entrypoint.proxy.TraceInvocationHandler.invoke(TraceInvocationHandler"
            + ".java:68)\n"
            + "\tat com.sun.proxy.$Proxy153.queryMainAndDetail(Unknown Source)\n"
            + "\tat com.taobao.trade.platform.tc.service.query.SellerQueryServiceImpl.queryMainAndDetail"
            + "(SellerQueryServiceImpl.java:148)\n"
            + "\tat com.taobao.trade.platform.tc.service.query"
            + ".SellerQueryServiceImpl$$FastClassBySpringCGLIB$$7d12b4cc.invoke(<generated>)\n"
            + "\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint"
            + "(CglibAopProxy.java:700)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke"
            + "(AfterReturningAdviceInterceptor.java:51)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice"
            + ".java:55)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke"
            + "(ExposeInvocationInterceptor.java:91)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy"
            + ".java:633)\n"
            + "\tat com.taobao.trade.platform.tc.service.query"
            + ".SellerQueryServiceImpl$$EnhancerBySpringCGLIB$$7a634ed8.queryMainAndDetail(<generated>)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10597.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint"
            + "(ReflectiveMethodInvocation.java:183)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat com.alibaba.trade.fulfillment.utils.trace.interceptor.BuyerDbRouteInterceptor.invoke"
            + "(BuyerDbRouteInterceptor.java:21)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)\n"
            + "\tat com.sun.proxy.$Proxy436.queryMainAndDetail(Unknown Source)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10597.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat com.taobao.csp.sentinel.entrypoint.entrance.HsfProviderInvocationHandler.invoke"
            + "(HsfProviderInvocationHandler.java:100)\n"
            + "\tat com.sun.proxy.$Proxy437.queryMainAndDetail(Unknown Source)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10597.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat com.taobao.hsf.remoting.provider.ReflectInvocationHandler.handleRequest0(ReflectInvocationHandler"
            + ".java:83)\n"
            + "\tat com.taobao.hsf.remoting.provider.ReflectInvocationHandler.invoke(ReflectInvocationHandler"
            + ".java:163)\n"
            + "\tat com.taobao.hsf2dubbo.DubboServerFilterAsyncInvocationHandlerInterceptor.invoke"
            + "(DubboServerFilterAsyncInvocationHandlerInterceptor.java:54)\n"
            + "\tat com.taobao.hsf.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:38)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$TailNode.invoke(RPCFilterBuilder.java:165)\n"
            + "\tat com.taobao.hsf.debug.DebugServerFilter.invoke(DebugServerFilter.java:25)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.BidirectionServerResponseFilter.invoke"
            + "(BidirectionServerResponseFilter.java:15)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.alibaba.trade.fulfillment.routing.LightFlowRouteFilter.invoke(LightFlowRouteFilter.java:42)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.unit.service.impl.UnitServerFilter.invoke(UnitServerFilter.java:66)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.region.service.impl.RegionServerFilter.invoke(RegionServerFilter.java:42)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.octopus.OctopusServerFilter.invoke(OctopusServerFilter.java:72)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.spas.SpasServerFilter.invoke(SpasServerFilter.java:76)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.txc.TXCServerFilter.invoke(TXCServerFilter.java:35)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.tps.component.TPSServerFilter.invoke(TPSServerFilter.java:68)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.stats.InvocationStatsServerFilter.invoke(InvocationStatsServerFilter"
            + ".java:47)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.monitor.log.filter.MonitorLogServerFilter.invoke(MonitorLogServerFilter.java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.profiler.ProfilerServerFilter.invoke(ProfilerServerFilter.java:32)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.eagleeye.EagleEyeServerFilter.invoke(EagleEyeServerFilter.java:68)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.filter.QosServerFilter.invoke(QosServerFilter.java:60)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.MethodAbsenceFilter.invoke(MethodAbsenceFilter.java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.EchoFilter.invoke(EchoFilter.java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.generic.GenericInvocationServerFilter.invoke(GenericInvocationServerFilter"
            + ".java:107)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.DubboGenericServerFilter.invoke(DubboGenericServerFilter.java:37)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.top.TopServerFilter.invoke(TopServerFilter.java:87)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.ServiceAbsenceFilter.invoke(ServiceAbsenceFilter.java:47)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.CommonServerFilter.invoke(CommonServerFilter.java:24)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.BidirectionServerRequestFilter.invoke(BidirectionServerRequestFilter"
            + ".java:19)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.context.DubboRPCContextServerFilter.invoke(DubboRPCContextServerFilter"
            + ".java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.context.RPCContextServerFilter.invoke(RPCContextServerFilter.java:39)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$HeadNode.invoke(RPCFilterBuilder.java:134)\n"
            + "\tat com.taobao.hsf.invocation.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:28)\n"
            + "\tat com.taobao.hsf.remoting.provider.ServerContextInvocationHandler.invoke"
            + "(ServerContextInvocationHandler.java:35)\n"
            + "\tat com.taobao.hsf.remoting.provider.ProviderProcessor.handleRequest(ProviderProcessor.java:70)\n"
            + "\tat com.taobao.hsf.io.remoting.hsf.message.HSFServerHandler$1.run(HSFServerHandler.java:189)\n"
            + "\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)\n"
            + "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:627)\n"
            + "\tat java.lang.Thread.run(Thread.java:861)";

        String line1 = "2020-04-29 15:21:38.862|trademanager|HSFBizProcessor-DEFAULT-12-thread-374:t.hsf||| ERROR RPC"
            + " invoke Service[com.taobao.trade.platform.api.query.SellerQueryService:1.0"
            + ".0]#[queryMainAndDetail]occur exception:\n"
            + "target server address:[hsf://11.138.179.248:12200?_p=hessian2&APP=tradeplatform3&st=na620&v=2"
            + ".0&_TIMEOUT=5000&_ih2=y&mg=tp3g3host&_CONNECTTIMEOUT=1000&_SERIALIZETYPE=hessian&ut=CENTER]\n"
            + "TraceId=0b5106fe15881448945648832e654d, RpcId=0.1.1.2.1\n"
            + "com.taobao.tc.exception.TCException: com.taobao.tc.exception.TCException: queryBatch errorcom.taobao"
            + ".tc.domain.query.QueryBizOrderDO@eac06e3[showMemo=false,param={sellerNumId={3522557225},bizType={200},"
            + "attributes={},excludedOptions={4503599627370496,144115188075855872,34359738368,281474976710656,"
            + "4611686018427387904,32},excludedAttributes={tbpwBizType=c2b2c,},status={0},},enableCount=true,"
            + "isDetail=false,isShowMainOrderAllDetail=false,pageNo=1,startRow=0,endRow=0,pageSize=15,"
            + "queryOrder=desc,limitTotalNum=<null>,options=-1,optionsQueryCondition=<null>,"
            + "useOptionsQueryCondition=false,ignoreWDShop=false,isUseTair=false,isNeedLimitQuery=false,"
            + "prePageSize=31,userNumId=3522557225,offsetRow=0,lastStartRow=<null>,ignoreCodWithNullPaytime=false,"
            + "from=,forceRouter=false,routVsearch=true,historyOrder=false,orderFields={},"
            + "isFiltedEmptyForFreeOrders=false,needStepTradeUnpaidQuery=<null>,needStepTradePaidQuery=<null>,"
            + "history=false,ignoreCodWithNullPaytimeFromSwitch=false,endTimeInterval=<null>]\n"
            + "\tat com.alibaba.xdriver.elastic.jdbc.ElasticQueryState.execute(ElasticQueryState.java:383)\n"
            + "\tat com.alibaba.xdriver.elastic.jdbc.ElasticQueryState.execute(ElasticQueryState.java:316)\n"
            + "\tat com.alibaba.xdriver.elastic.jdbc.ElasticStatement.executeQuery(ElasticStatement.java:144)\n"
            + "\tat com.alibaba.xdriver.elastic.jdbc.ElasticStatement.execute(ElasticStatement.java:256)\n"
            + "\tat com.alibaba.xdriver.elastic.jdbc.ElasticPreparedStatement.executeQuery(ElasticPreparedStatement"
            + ".java:69)\n"
            + "\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeQuery(FilterChainImpl"
            + ".java:2714)\n"
            + "\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_executeQuery(FilterEventAdapter"
            + ".java:465)\n"
            + "\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeQuery(FilterChainImpl"
            + ".java:2711)\n"
            + "\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.executeQuery(PreparedStatementProxyImpl"
            + ".java:145)\n"
            + "\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.executeQuery(DruidPooledPreparedStatement"
            + ".java:227)\n"
            + "\tat com.taobao.tddl.atom.jdbc.TPreparedStatementWrapper.executeQuery(TPreparedStatementWrapper"
            + ".java:109)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupPreparedStatement.executeQueryOnConnection"
            + "(TGroupPreparedStatement.java:110)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupStatement$4.tryOnDataSource(TGroupStatement.java:650)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupStatement$4.tryOnDataSource(TGroupStatement.java:632)\n"
            + "\tat com.taobao.tddl.group.dbselector.AbstractDBSelector.tryOnDataSourceHolder(AbstractDBSelector"
            + ".java:187)\n"
            + "\tat com.taobao.tddl.group.dbselector.OneDBSelector.tryExecuteInternal(OneDBSelector.java:52)\n"
            + "\tat com.taobao.tddl.group.dbselector.AbstractDBSelector.tryExecute(AbstractDBSelector.java:442)\n"
            + "\tat com.taobao.tddl.group.dbselector.AbstractDBSelector.tryExecute(AbstractDBSelector.java:449)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupStatement.executeQuery(TGroupStatement.java:505)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupStatement.executeInternal(TGroupStatement.java:144)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupStatement.execute(TGroupStatement.java:103)\n"
            + "\tat com.taobao.tddl.group.jdbc.TGroupPreparedStatement.execute(TGroupPreparedStatement.java:92)\n"
            + "\tat com.taobao.tddl.repo.mysql.spi.My_JdbcHandler.executeQuery(My_JdbcHandler.java:695)\n"
            + "\tat com.taobao.tddl.repo.mysql.spi.My_Cursor.init(My_Cursor.java:106)\n"
            + "\tat com.taobao.tddl.repo.mysql.handler.QueryMyHandler.handle(QueryMyHandler.java:89)\n"
            + "\tat com.taobao.tddl.repo.mysql.handler.QueryMyHandlerWithMemcached.handleBySql"
            + "(QueryMyHandlerWithMemcached.java:169)\n"
            + "\tat com.taobao.tddl.repo.mysql.handler.QueryMyHandlerWithMemcached.handle(QueryMyHandlerWithMemcached"
            + ".java:54)\n"
            + "\tat com.taobao.tddl.executor.AbstractGroupExecutor.executeInner(AbstractGroupExecutor.java:47)\n"
            + "\tat com.taobao.tddl.executor.AbstractGroupExecutor.execByExecPlanNode(AbstractGroupExecutor.java:36)\n"
            + "\tat com.taobao.tddl.executor.TopologyExecutor.execByExecPlanNode(TopologyExecutor.java:74)\n"
            + "\tat com.taobao.tddl.executor.MatrixExecutor.execByExecPlanNodeByOne(MatrixExecutor.java:800)\n"
            + "\tat com.taobao.tddl.executor.MatrixExecutor.execByExecPlanNode(MatrixExecutor.java:789)\n"
            + "\tat com.taobao.tddl.executor.MatrixExecutor.execute(MatrixExecutor.java:145)\n"
            + "\tat com.taobao.tddl.matrix.jdbc.TConnection.executeSQL(TConnection.java:275)\n"
            + "\tat com.taobao.tddl.matrix.jdbc.TPreparedStatement.executeSQL(TPreparedStatement.java:64)\n"
            + "\tat com.taobao.tddl.matrix.jdbc.TStatement.executeInternal(TStatement.java:142)\n"
            + "\tat com.taobao.tddl.matrix.jdbc.TPreparedStatement.execute(TPreparedStatement.java:49)\n"
            + "\tat com.alibaba.trade.fulfillment.store.dao.impl.readDb.ReadServiceJdbcDao.executeQuery"
            + "(ReadServiceJdbcDao.java:114)\n"
            + "\tat com.alibaba.trade.fulfillment.store.dao.impl.readDb.ReadServiceBizOrderDao4MysqlImpl"
            + ".getOrdersByQuery(ReadServiceBizOrderDao4MysqlImpl.java:322)\n"
            + "\tat com.taobao.trade.platform.tc.manager.impl.TcReadManagerImpl.queryBatch(TcReadManagerImpl"
            + ".java:241)\n"
            + "\tat com.taobao.trade.platform.tc.manager.impl.TcReadManagerImpl.queryMainAndDetail(TcReadManagerImpl"
            + ".java:376)\n"
            + "\tat com.taobao.trade.platform.tc.manager.impl.TcReadManagerImpl$$FastClassBySpringCGLIB$$9cf0d73c"
            + ".invoke(<generated>)\n"
            + "\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy"
            + ".java:629)\n"
            + "\tat com.taobao.trade.platform.tc.manager.impl.TcReadManagerImpl$$EnhancerBySpringCGLIB$$65ecf56"
            + ".queryMainAndDetail(<generated>)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10743.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint"
            + "(ReflectiveMethodInvocation.java:183)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat com.taobao.trade.platform.tc.util.monitor.advice.readdb.ReadDBMethodRouteInterceptor.invoke"
            + "(ReadDBMethodRouteInterceptor.java:23)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)\n"
            + "\tat com.sun.proxy.$Proxy395.queryMainAndDetail(Unknown Source)\n"
            + "\tat com.taobao.trade.platform.tc.service.query.SellerQueryServiceImpl.queryMainAndDetail"
            + "(SellerQueryServiceImpl.java:163)\n"
            + "\tat com.taobao.trade.platform.tc.service.query"
            + ".SellerQueryServiceImpl$$FastClassBySpringCGLIB$$7d12b4cc.invoke(<generated>)\n"
            + "\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint"
            + "(CglibAopProxy.java:700)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke"
            + "(AfterReturningAdviceInterceptor.java:51)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice"
            + ".java:55)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke"
            + "(ExposeInvocationInterceptor.java:91)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy"
            + ".java:633)\n"
            + "\tat com.taobao.trade.platform.tc.service.query"
            + ".SellerQueryServiceImpl$$EnhancerBySpringCGLIB$$5c70b7ce.queryMainAndDetail(<generated>)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10718.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint"
            + "(ReflectiveMethodInvocation.java:183)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:150)\n"
            + "\tat com.alibaba.trade.fulfillment.utils.trace.interceptor.BuyerDbRouteInterceptor.invoke"
            + "(BuyerDbRouteInterceptor.java:21)\n"
            + "\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation"
            + ".java:172)\n"
            + "\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)\n"
            + "\tat com.sun.proxy.$Proxy436.queryMainAndDetail(Unknown Source)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10718.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat com.taobao.csp.sentinel.entrypoint.entrance.HsfProviderInvocationHandler.invoke"
            + "(HsfProviderInvocationHandler.java:100)\n"
            + "\tat com.sun.proxy.$Proxy437.queryMainAndDetail(Unknown Source)\n"
            + "\tat sun.reflect.GeneratedMethodAccessor10718.invoke(Unknown Source)\n"
            + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"
            + "\tat java.lang.reflect.Method.invoke(Method.java:498)\n"
            + "\tat com.taobao.hsf.remoting.provider.ReflectInvocationHandler.handleRequest0(ReflectInvocationHandler"
            + ".java:83)\n"
            + "\tat com.taobao.hsf.remoting.provider.ReflectInvocationHandler.invoke(ReflectInvocationHandler"
            + ".java:163)\n"
            + "\tat com.taobao.hsf2dubbo.DubboServerFilterAsyncInvocationHandlerInterceptor.invoke"
            + "(DubboServerFilterAsyncInvocationHandlerInterceptor.java:54)\n"
            + "\tat com.taobao.hsf.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:38)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$TailNode.invoke(RPCFilterBuilder.java:165)\n"
            + "\tat com.taobao.hsf.debug.DebugServerFilter.invoke(DebugServerFilter.java:25)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.BidirectionServerResponseFilter.invoke"
            + "(BidirectionServerResponseFilter.java:15)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.alibaba.trade.fulfillment.routing.LightFlowRouteFilter.invoke(LightFlowRouteFilter.java:42)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.unit.service.impl.UnitServerFilter.invoke(UnitServerFilter.java:66)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.region.service.impl.RegionServerFilter.invoke(RegionServerFilter.java:42)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.octopus.OctopusServerFilter.invoke(OctopusServerFilter.java:72)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.spas.SpasServerFilter.invoke(SpasServerFilter.java:76)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.txc.TXCServerFilter.invoke(TXCServerFilter.java:35)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.tps.component.TPSServerFilter.invoke(TPSServerFilter.java:68)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.stats.InvocationStatsServerFilter.invoke(InvocationStatsServerFilter"
            + ".java:47)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.monitor.log.filter.MonitorLogServerFilter.invoke(MonitorLogServerFilter.java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.profiler.ProfilerServerFilter.invoke(ProfilerServerFilter.java:32)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.plugins.eagleeye.EagleEyeServerFilter.invoke(EagleEyeServerFilter.java:68)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.filter.QosServerFilter.invoke(QosServerFilter.java:60)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.MethodAbsenceFilter.invoke(MethodAbsenceFilter.java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.EchoFilter.invoke(EchoFilter.java:45)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.generic.GenericInvocationServerFilter.invoke(GenericInvocationServerFilter"
            + ".java:107)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.DubboGenericServerFilter.invoke(DubboGenericServerFilter.java:37)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.top.TopServerFilter.invoke(TopServerFilter.java:87)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.rpc.server.ServiceAbsenceFilter.invoke(ServiceAbsenceFilter.java:47)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.CommonServerFilter.invoke(CommonServerFilter.java:24)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.common.filter.BidirectionServerRequestFilter.invoke(BidirectionServerRequestFilter"
            + ".java:19)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf2dubbo.context.DubboRPCContextServerFilter.invoke(DubboRPCContextServerFilter"
            + ".java:48)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.context.RPCContextServerFilter.invoke(RPCContextServerFilter.java:39)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterNode.invoke(RPCFilterNode.java:71)\n"
            + "\tat com.taobao.hsf.invocation.filter.RPCFilterBuilder$HeadNode.invoke(RPCFilterBuilder.java:134)\n"
            + "\tat com.taobao.hsf.invocation.filter.FilterInvocationHandler.invoke(FilterInvocationHandler.java:28)\n"
            + "\tat com.taobao.hsf.remoting.provider.ServerContextInvocationHandler.invoke"
            + "(ServerContextInvocationHandler.java:35)\n"
            + "\tat com.taobao.hsf.remoting.provider.ProviderProcessor.handleRequest(ProviderProcessor.java:70)\n"
            + "\tat com.taobao.hsf.io.remoting.hsf.message.HSFServerHandler$1.run(HSFServerHandler.java:189)\n"
            + "\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)\n"
            + "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:627)\n"
            + "\tat java.lang.Thread.run(Thread.java:861)\n"
            + "1/1";
        String pattern = "(.*TraceId=)(\\w+)(,.*)";

        // 创建 Pattern 对象
        Pattern r = Pattern.compile(pattern);

        // 现在创建 matcher 对象
        Matcher m = r.matcher(line1);
        if (m.find( )) {
            System.out.println("Found value: " + m.group(0) );
            System.out.println("Found value: " + m.group(1) );
            System.out.println("Found value: " + m.group(2) );
            System.out.println("Found value: " + m.group(3) );
        } else {
            System.out.println("NO MATCH");
        }
    }
}
